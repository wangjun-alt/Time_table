# Generated by Django 3.0.6 on 2020-05-10 08:15

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BasicUser',
            fields=[
                ('open_id', models.CharField(max_length=64, primary_key=True, serialize=False, unique=True, verbose_name='用户标识符')),
                ('user_nick_name', models.CharField(max_length=32, null=True, verbose_name='用户昵称')),
                ('user_country', models.CharField(default='中国', max_length=32, verbose_name='所在国家或地区')),
                ('user_city', models.CharField(default='西安', max_length=32, verbose_name='所在城市')),
                ('user_province', models.CharField(default='陕西', max_length=32, verbose_name='所在省份')),
                ('user_phone', models.CharField(max_length=15, null=True, verbose_name='手机号')),
                ('user_head_img', models.CharField(max_length=150, null=True, verbose_name='头像')),
                ('user_sex', models.CharField(default='0', max_length=1, verbose_name='性别(0男1女)')),
                ('user_subscribe', models.CharField(default='1', max_length=1, verbose_name='用户是否订阅公众号')),
                ('user_subscribe_way', models.CharField(default='1', max_length=10, verbose_name='用户订阅公众号来源')),
                ('user_qrcode', models.CharField(max_length=64, null=True, verbose_name='二维码名片存储地址')),
                ('user_background', models.CharField(max_length=64, null=True, verbose_name='背景图片url')),
                ('authentication', models.CharField(default=0, max_length=1, verbose_name='认证字段')),
            ],
            options={
                'db_table': 'BasicUser',
            },
        ),
        migrations.CreateModel(
            name='CourseInfo',
            fields=[
                ('student_school', models.CharField(max_length=32, null=True, verbose_name='学生学校')),
                ('firstdays', models.DateField(verbose_name='开学第一天')),
                ('course_id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='主键自增')),
                ('course_name', models.CharField(max_length=32, verbose_name='课程名称')),
                ('course_teacher', models.CharField(max_length=16, verbose_name='授课老师')),
                ('cours_room', models.CharField(max_length=16, verbose_name='授课地点')),
                ('course_days', models.CharField(max_length=16, verbose_name='星期一～星期五')),
                ('course_times', models.CharField(max_length=16, verbose_name='上课的节数，1-2节课存1-2')),
                ('course_weeks', models.CharField(max_length=32, verbose_name='上课的周[1,2,3,4,5]')),
                ('course_major', models.CharField(max_length=32, verbose_name='专业班级')),
                ('school_year', models.CharField(default=2020, max_length=16, verbose_name='学年')),
                ('term', models.CharField(default=1, max_length=1, verbose_name='学期')),
                ('grade', models.CharField(max_length=8, verbose_name='年级')),
            ],
            options={
                'db_table': 'CourseInfo',
            },
        ),
        migrations.CreateModel(
            name='PersonalCourse',
            fields=[
                ('pcourse_id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='主键自增')),
                ('pcourse_name', models.CharField(max_length=32, verbose_name='课程名称')),
                ('pcourse_teacher', models.CharField(max_length=16, verbose_name='授课老师')),
                ('pcours_room', models.CharField(max_length=16, verbose_name='授课地点')),
                ('pcourse_days', models.CharField(max_length=16, verbose_name='星期一～星期五')),
                ('pcourse_times', models.CharField(max_length=16, verbose_name='上课的节数,1-2节课存1-2')),
                ('pcourse_weeks', models.CharField(max_length=32, verbose_name='上课的周[1,2,3,4,5]')),
                ('open_id', models.CharField(max_length=64, verbose_name='用户标识符')),
                ('effect', models.CharField(default='1', max_length=1, verbose_name='该课程是否有效,1有效,0无效')),
            ],
            options={
                'db_table': 'PersonalCourse',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('sche_week', models.CharField(max_length=4, verbose_name='日期所属周')),
                ('sche_id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='主键自增')),
                ('sche_name', models.CharField(max_length=32, verbose_name='日程名称')),
                ('sche_address', models.CharField(max_length=32, null=True, verbose_name='日程地点')),
                ('sche_datetime', models.DateField(default=datetime.datetime(2020, 5, 10, 16, 15, 32, 45041), verbose_name='日程日期')),
                ('open_id', models.CharField(max_length=64, verbose_name='用户标识符')),
                ('effect', models.CharField(default='1', max_length=1, verbose_name='该课程是否有效,1有效,0无效')),
            ],
            options={
                'db_table': 'Schedule',
            },
        ),
        migrations.CreateModel(
            name='StudentInfo',
            fields=[
                ('open_id', models.CharField(max_length=64, primary_key=True, serialize=False, unique=True, verbose_name='用户标识符')),
                ('student_id', models.CharField(max_length=16, null=True, unique=True, verbose_name='学生学号')),
                ('student_name', models.CharField(max_length=32, null=True, verbose_name='学生姓名')),
                ('student_status', models.CharField(default='0', max_length=1, verbose_name='学生基础信息状态')),
                ('student_school', models.CharField(max_length=32, null=True, verbose_name='学生学校')),
                ('student_college', models.CharField(max_length=32, null=True, verbose_name='学生学院')),
                ('student_major', models.CharField(max_length=32, null=True, verbose_name='学生专业班级')),
                ('student_credent', models.CharField(max_length=128, null=True, verbose_name='学生证件URL')),
                ('student_grade', models.CharField(max_length=8, null=True, verbose_name='学生年级')),
            ],
            options={
                'db_table': 'StudentInfo',
            },
        ),
    ]
